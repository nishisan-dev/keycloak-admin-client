name: Publish to GitHub Packages

on:
  push:
    branches: [ "main" ]

permissions:
  contents: write
  packages: write

jobs:
  build-and-publish:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '21'
          cache: maven

      - name: Bump project version (minor per commit)
        id: bump_version
        run: |
          CURRENT_VERSION=$(mvn -q -Dexpression=project.version -DforceStdout help:evaluate)
          MAJOR=$(echo "$CURRENT_VERSION" | sed -E 's/^([0-9]+).*/\1/')
          MINOR=${{ github.run_number }}
          PATCH=${{ github.run_attempt }}
          NEW_VERSION="${MAJOR}.${MINOR}.${PATCH}"
          echo "new_version=$NEW_VERSION" >> $GITHUB_OUTPUT
          echo "Setting version to $NEW_VERSION"
          mvn -B -s settings.xml versions:set -DnewVersion="$NEW_VERSION"
          mvn -B -s settings.xml versions:commit

      - name: Build with Maven (package)
        env:
          GITHUB_USERNAME: ${{ github.actor }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: mvn -B -s settings.xml package

      - name: Publish to GitHub Packages (deploy)
        env:
          GITHUB_USERNAME: ${{ github.actor }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: mvn -B -s settings.xml -DaltDeploymentRepository=github::default::https://maven.pkg.github.com/${{ github.repository }} deploy

      - name: Tag release
        if: success()
        env:
          VERSION: ${{ steps.bump_version.outputs.new_version }}
        run: |
          git fetch --tags
          if git rev-parse "v${VERSION}" >/dev/null 2>&1; then
            echo "Tag v${VERSION} already exists; skipping creation."
            exit 0
          fi
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git tag -a "v${VERSION}" -m "Release v${VERSION}"
          git push origin "v${VERSION}"
